<?xml version="1.0" encoding="utf-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="lillet" xml:id="core.pear.pear-exception.intro">
 <refnamediv>
  <refname>
   Using PEAR_Exception for advanced error handling in PHP 5+
  </refname>
  <refpurpose>
   Using PEAR_Exception
  </refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <info>
   <author><personname><firstname>Gregory</firstname><surname>Beaver</surname></personname><personblurb><para>cellog@php.net</para></personblurb></author>
   <copyright>
    <year>2006</year>
    <holder>Gregory Beaver</holder>
   </copyright>
   <releaseinfo>PEAR_Exception PEAR 1.5.0a1</releaseinfo>
  </info>
  <simpara>Introduction to the usage of PEAR_Exception</simpara>
 </refsynopsisdiv>
 <refsection xml:id="core.pear.pear-exception.intro.intro"><info><title>Introduction</title></info>
  
  <para>
   This class is available as part of the
   <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="&url.pear.package;pear">PEAR package</link>.
   Features include:
   <itemizedlist>
    <listitem>
     <para>
      Nestable exceptions (<programlisting role="php"><![CDATA[
      <?php throw new PEAR_Exception($msg, $prev_exception); ?>]]></programlisting>)
     </para>
    </listitem>
    <listitem>
     <para>
      Subject/Observer pattern, triggered when an exception is instantiated
     </para>
    </listitem>
    <listitem>
     <para>
      Clear, detailed and attractively formatted error messages
     </para>
    </listitem>
    <listitem>
     <para>
      Extra context information available compared to built-in Exception.
      For instance, a cause of the exception (PEAR_Error/PEAR_ErrorStack/another
      Exception).
     </para>
    </listitem>
    <listitem>
     <para>
      Exception cause can be a PEAR_Error object, PEAR_Exception object or an array of mixed
      PEAR_Exceptions/PEAR_ErrorStack warnings
     </para>
    </listitem>
    <listitem>
     <para>
      callbacks for specific exception classes and their children
     </para>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   Usage example:
   <programlisting role="php">
    <![CDATA[
<?php
require_once 'PEAR/Exception.php';

class Test {
	function foo() {
		throw new PEAR_Exception('Error Message', ERROR_CODE);
    }
}

function myLogger($pear_exception) {
    echo $pear_exception->getMessage();
}
// each time a exception is thrown the 'myLogger' will be called
// (its use is completely optional)
PEAR_Exception::addObserver('myLogger');
$test = new Test;
try {
    $test->foo();
} catch (PEAR_Exception $e) {
    print $e;
}
?>
    ]]>
   </programlisting>
  </para>
  <para>
   API documentation is documented in the documentation for the PEAR package
   generated by phpDocumentor.  The class is very simple, examine the source
   in the PEAR package to get a better idea of how it works.
  </para>
 </refsection>
</refentry>
