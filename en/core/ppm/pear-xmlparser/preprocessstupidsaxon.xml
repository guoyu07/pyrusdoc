<?xml version="1.0" encoding="utf-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="lillet" xml:id="core.ppm.pear-xmlparser.preprocessstupidsaxon">
 <refnamediv>
  <refname>
   <function>PEAR_XMLParser::preProcessStupidSaxon</function>
  </refname>
  <refpurpose>pre-process xml to weed out characters/entities that would kill parsing</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <funcsynopsis>
   <funcsynopsisinfo>require_once &apos;/XMLParser.php&apos;;</funcsynopsisinfo>
   <funcprototype>
    <funcdef>
     string
     <function>PEAR_XMLParser::preProcessStupidSaxon</function>
    </funcdef>
    <paramdef choice="req">
     string
     <parameter>$data</parameter>
    </paramdef>
   </funcprototype>
  </funcsynopsis>
 </refsynopsisdiv>
 <refsection xml:id="core.ppm.pear-xmlparser.preprocessstupidsaxon.desc">
  &title.desc;
  <para>
   This method examines xml data prior to parsing and replaces all entities
   like &amp;agrave; with their equivalent (&amp;#224; in this case).  It also
   scans the file for any non-ascii characters like &#224; and replaces them with
   their entity equivalent (&amp;#224).
  </para>
  <para>
   This prevents saxon in PHP 4 and PHP 5 from choking on non-ISO-8859-1 characters.
  </para>
</refsection>
 <refsection xml:id="core.ppm.pear-xmlparser.preprocessstupidsaxon.param">
  &title.param;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      &type.string;
      <parameter>$data</parameter>
     </term>
     <listitem>
      <para>
       The xml data.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsection>
 <refsection xml:id="core.ppm.pear-xmlparser.preprocessstupidsaxon.throws">
  &title.throws;
  <para>
   <emphasis>throws</emphasis>
   no exceptions thrown
  </para>
 </refsection>
 <refsection xml:id="core.ppm.pear-xmlparser.preprocessstupidsaxon.note">
  &title.note;
  &note.notstatic;
</refsection>
</refentry>
